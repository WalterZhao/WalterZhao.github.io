<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[docker+ssh]]></title>
      <url>%2F2017%2F01%2F04%2Fdocker-ssh%2F</url>
      <content type="text"><![CDATA[目录 准备工作 安装软件 保存镜像 使用镜像 注意事项 1.准备工作使用ubuntu:14.04镜像创建一个容器 $sudo docker run -it ubuntu:14.04 /bin/bash 因为ubuntu镜像被裁剪过，其中只有部分基本的常用指令，是没有ssh服务的，因此需要安装ssh服务。 2.安装软件2.1更新软件源使用apt-get update来更新软件源信息。但由于ubuntu官方的网址在国内比较慢，因此可以替换为国内163镜像源。在容器内创建/etc/apt/sources.list.d/163.list文件，并添加下述内容： deb http://mirrors.163.com/ubuntu/ vivid main restricted universe multiversedeb http://mirrors.163.com/ubuntu/ vivid-security main restricted universe multiversedeb http://mirrors.163.com/ubuntu/ vivid-updates main restricted universe multiversedeb http://mirrors.163.com/ubuntu/ vivid-proposed main restricted universe multiversedeb http://mirrors.163.com/ubuntu/ vivid-backports main restricted universe multiversedeb-src http://mirrors.163.com/ubuntu/ vivid main restricted universe multiversedeb-src http://mirrors.163.com/ubuntu/ vivid-security main restricted universe multiversedeb-src http://mirrors.163.com/ubuntu/ vivid-updates main restricted universe multiversedeb-src http://mirrors.163.com/ubuntu/ vivid-proposed main restricted universe multiversedeb-src http://mirrors.163.com/ubuntu/ vivid-backports main restricted universe multiverse 然后修改/etc/apt/sources.list文件，修改其名称，以防止还会连接ubuntu官方源。最后，重新执行apt-get update 2.2安装和配置SSH服务安装openssh-server apt-get install opensh-server #安装ssh服务 mkdir -p /var/run/sshd #运行ssh服务需要该目录存在 /usr/sbin/sshd -D &amp; #后台运行该服务，必须以绝对路径启动 在使用netstat前得安装net-tools apt-get install net-tools 然后使用netstat -tunlp查看容器的22端口（SSH服务默认监听端口）是否处于鉴定状态。修改SSH服务的安全登录配置，取消pam登录限制 sed -ri &apos;s/session required pam_loginuid.so/#session required pam_loginuid.so/g&apos; /etc/pam.d/sshd #sed的&apos;s/ / /g&apos;是用来进行文本替换，本指令是将/etc/pam.d/sshd文件中的某一行注释掉 2.3修改authorized_keys文件在root目录下创建.ssh目录，并复制需要登录的公钥信息（在其他机器用户目录的.ssh/id_rsa.pub文件中，可以通过ssh-kegen -t rsa生成），到authorized_keys文件中。 mkdir root/.ssh vim /root/.ssh/authorized_keys 在根目录下创建run.sh脚本文件，用来自动启动SSH服务 cat&gt;run.sh&lt;&lt;EOF &gt;#!/bin/bash &gt;/usr/sbin/sshd -D &gt;EOF 最后退出容器即可。 3.保存镜像$ sudo docker commit &lt;容器名&gt; &lt;保存为的镜像名，如sshd:ubuntu&gt; 4.使用镜像启动容器，并添加端口映射10022–&gt;22。其中10022时宿主主机的端口，22是容器的端口 $ sudo docker run -p 10022:22 sshd:ubuntu /run.sh 查看容器运行信息 $ sudo docker ps 在容器外部，就可以通过ssh访问容器了。例如在宿主机上 $ ssh root@127.0.0.1 -p 10022 #以root用户登录 5.注意事项问题主要出现在在容器外部用ssh登录时，即验证密钥的阶段 5.1ermission denied (publickey,password).如果不指定使用哪个用户名登录，ssh默认会采用你在宿主机登录的用户名进行登录，如果此时docker容器中并没有相应的用户名或者其用户目录下的authorized_keys文件并没有被设置正确，会出现密钥验证失败，需要输入密码的情况。 Permission denied (publickey,password). 通过使用ssh -v指令显示连接时的详细过程，进行判断 5.2Connection refused没有打开ssh服务。使用ps -e | grep ssh查看。手动操作开启/关闭ssh服务相关命令： 123sudo service ssh start #手动启动服务sudo service ssh stop #手动关闭服务sudo service ssh status #查询服务状态 5.31234567891011@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED! @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@IT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY!Someone could be eavesdropping on you right now (man-in-the-middle attack)!It is also possible that the RSA host key has just been changed. 这种情况发生在server端密码或是其他发生改变的时候。一般就需要删除~/.ssh/known_hosts的东西，然后再登录即可 5.4Agent admitted failure to sign using the key解決方式 使用 ssh-add 指令将私钥 加进来 （根据个人的密匙命名不同更改 id_rsa） ssh-add ~/.ssh/id_rsa 5.5权限问题authorized_keys权限一般为600，.ssh文件夹的权限一般为700 5.6其他问题在ssh权限中，需要针对需要设置/etc/pam.d/sshd和/etc/ssh/sshd_config文件，后续自行参考其他资料。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[opengrok_install]]></title>
      <url>%2F2016%2F12%2F01%2Fopengrok-install%2F</url>
      <content type="text"><![CDATA[OpenGrok是一个快速、便于使用的源代码搜索与对照引擎。它帮助你搜索，对照，定位你的源代码树。 启动路径默认希望bin所在目录：/var/opengrok DATA_ROOT默认的生成的索引列表存储的目录：/var/opengrok/data SRC_ROOT默认的源代码目录：/var/opengrok/src 自定义安装需要修改opengrok/bin/opengrok脚本中的一些变量的值，如：OPENGROK_INSTANCE_BASE=”/home/zhaoa/software/opengrok-0.12.1.6”EXUBERANT_CTAGS=”/usr/bin/ctags”还有放入Tomcat中的source.war目录中的web.xml（在子目录WEB-INF）中的 CONFIGURATION /var/opengrok/etc/configuration.xml Full path to the configuration file where OpenGrok can read it’s configuration 其中黑色部分改为实际所在目录]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Hexo+githubpages]]></title>
      <url>%2F2016%2F12%2F01%2FHexo-githubpages%2F</url>
      <content type="text"><![CDATA[目录 hexo安装及初始化 github pages绑定域名 上传到github 修改主题 参考 1.Hexo安装及初始化安装hexo之前需要安装node.js，具体安装步骤见hexo安装。 $ npm install -g hexo-cli 然后进行初始化 $ hexo init &lt;folder&gt; $ cd &lt;folder&gt; $ npm install ##目的安装相应依赖项 新建完成后，指定文件夹的目录如下： . ├── _config.yml ├── package.json ├── scaffolds ├── source | ├── _drafts | └── _posts └── themes _config.yml：网站的 配置 信息，您可以在此配置大部分的参数。package.json：应用程序的信息。EJS, Stylus 和 Markdown renderer 已默认安装，可以自由移除scaffolds：模版 文件夹。当新建文章时，Hexo 会根据 scaffold 来建立文件。source：资源文件夹是存放用户资源的地方。除 posts 文件夹之外，开头命名为 (下划线)的文件 / 文件夹和隐藏的文件将会被忽略。Markdown 和 HTML 文件会被解析并放到 public 文件夹，而其他文件会被拷贝过去。themes：主题 文件夹。Hexo 会根据主题来生成静态页面。 2.github pages绑定域名2.1申请免费域名dot_tk是一个免费申请.tk域名的网站。DNSPod-免费智能DNS解析服务商提供免费dns解析TK域名免费注册及解析详细教程_百度经验利用GitHub Pages和Hexo搭建个人博客 2.2域名绑定github pages在终端ping你的github pages主页，得到ip地址。然后在source文件夹下新建CNAME文件，文件中只有一行信息“你的域名“（不包含开头的www）。 3.上传到github先安装 hexo-deployer-git $ npm install hexo-deployer-git --save 修改配置 deploy: type: git repo: &lt;repository url&gt;(仓库地址) branch: [branch](分支，一般是master) message: [message] 随后可以通过一下命令操作hexo了，参考命令 $ hexo new &lt;filename&gt; #根据模板生成md文件，在source/_post目录下 $ hexo generate #生成静态文件 $ hexo server #通过localhost:4000可以预览网页 $ hexo deploy #发布到github上 4.修改主题hexo默认的模板是landspace，在themes文件夹下。主题中的next是一个不错的模板，可以参照它的说明进行设置。 5.参考我的博客是如何搭建的（github pages + HEXO + 域名绑定）Hexo搭建Github-Pages博客填坑教程]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[jekyll]]></title>
      <url>%2F2016%2F12%2F01%2Fjekyll-install%2F</url>
      <content type="text"><![CDATA[目录 系统版本 安装ruby 安装jekyll 参考 系统版本$ cat /etc/issue Ubuntu 14.04.4 LTS \n \l $ uname -a Linux ubuntu 4.2.0-27-generic #32~14.04.1-Ubuntu SMP Fri Jan 22 15:32:26 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux 安装rubyruby在ubuntu下默认不安装的，可以有两种方式安装。 1 使用ubuntu系统软件安装命令$sudo apt-get install ruby 但该命令安装的ruby版本相对较老，而是1.9版本，而2.0以后版本才可以使用Jekyll3。 2 使用ruby版本管理器rvm安装。首先需要安装gem（用apt-get）$ gem sources --remove https://rubygems.org/ $ gem sources --remove http://rubygems.org/ $ gem sources -a https://ruby.taobao.org/ $ gem sources -l \*** CURRENT SOURCES *** https://ruby.taobao.org # 请确保只有 ruby.taobao.org，这是一个比较快的镜像 安装rvm和ruby$ sudo apt-get install curl $ sudo gem install rvm $ rvm -v $ \curl -sSL https://get.rvm.io | bash $ source /home/user/.rvm/scripts/rvm $ rvm install ruby-2.3.3 $ rvm use ruby-2.3.3 $ rvm -v 安装ruby前可以通过rvm list known查看可安装版本，选择较新的版本。安装ruby可能会出现问题问题，主要原因是 Ruby Rvm apt-get update 错误，错误代码： Error running &apos;requirements_debian_update_system ruby-2.3.3&apos;... 解决方法：在运行rvm install 2.3.3之前先运行rvm autolibs disable 安装Jekyll安装js runtime$ sudo apt-get install nodejs $ gem install execjs 安装jekyll$gem install jekyll $jekyll -v $ gem install rdiscount 此处默认安装的是jekyll3版本，此版本需要ruby2.0.0以上版本。Jekyll默认的markdown解析器maruku对中文支持不够完善，换成RDiscount解析器。 参考ubuntu 12.04安装jekyll在github上写博客使用 GitHub, Jekyll 打造自己的独立博客]]></content>
    </entry>

    
  
  
</search>
